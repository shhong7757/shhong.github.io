{"version":3,"sources":["webpack:///./contents/assets/arrow_right.svg","webpack:///./contents/assets/menu.svg","webpack:///./src/css/index.ts","webpack:///./src/components/Header/Header.tsx","webpack:///./src/components/Header/index.ts","webpack:///./src/components/Layout/Layout.tsx","webpack:///./src/components/Layout/index.ts","webpack:///./src/hooks/useWindow.ts","webpack:///./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","webpack:///./src/components/Category/Category.tsx","webpack:///./src/components/Category/index.ts","webpack:///./src/components/GroupByCategory/index.ts","webpack:///./src/components/GroupByCategory/GroupByCategory.tsx","webpack:///./src/components/Utterances/Utterances.tsx","webpack:///./src/components/Utterances/index.ts","webpack:///./src/templates/blog-post.tsx"],"names":["React","ArrowRight","props","createElement","defaultProps","module","exports","default","Menu","wrapper","alignCenter","font","css","headerContainer","headerWrapper","headerLogoWrapper","navWrapper","Header","siteTitle","to","activeStyle","color","Layout","children","data","styles","site","siteMetadata","title","useWindowWidth","useState","undefined","windowWidth","setWindowWidth","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value","open","keyframes","close","categoryFont","titleFont","Category","category","categoryOfSelectedTitle","postTitles","isOpen","setIsOpen","handleClick","useCallback","onClick","map","postTitle","path","key","id","href","style","textDecoration","GroupByCategory","categories","categoryGroup","index","toString","Utterances","ref","createRef","repo","process","GATSBY_COMMENT_REPO","utterances","document","entries","src","label","theme","crossOrigin","async","forEach","setAttribute","current","appendChild","displayName","articleWrapper","conttainer","subNavWrapper","pageQuery","PostTemplate","reactive","setReactive","group","allMarkdownRemark","markdownRemark","frontmatter","date","html","categoryGroups","useMemo","g","edges","edge","node","handleMenuClick","navWrapperCombine","className","dangerouslySetInnerHTML","__html"],"mappings":"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","file":"component---src-templates-blog-post-tsx-9f20e25c3d15636771b9.js","sourcesContent":["var React = require('react');\n\nfunction ArrowRight (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"d\":\"M0 0h24v24H0V0z\",\"fill\":\"none\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\",\"key\":1})]);\n}\n\nArrowRight.defaultProps = {\"height\":\"24\",\"viewBox\":\"0 0 24 24\",\"width\":\"24\"};\n\nmodule.exports = ArrowRight;\n\nArrowRight.default = ArrowRight;\n","var React = require('react');\n\nfunction Menu (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"d\":\"M0 0h24v24H0V0z\",\"fill\":\"none\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\",\"key\":1})]);\n}\n\nMenu.defaultProps = {\"height\":\"24\",\"viewBox\":\"0 0 24 24\",\"width\":\"24\"};\n\nmodule.exports = Menu;\n\nMenu.default = Menu;\n","import { css } from '@emotion/core';\n\nexport const wrapper = css`\n  max-width: 1200px;\n  margin: 0px auto;\n`;\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport { Link } from 'gatsby';\n\nimport { wrapper } from '../../css';\n\ninterface Props {\n  siteTitle: string;\n}\n\nconst alignCenter = css`\n  justify-self: center;\n  align-self: center;\n`;\n\nconst font = css`\n  ${alignCenter}\n  margin-top: 14px;\n  margin-bottom: 14px;\n  color: black;\n  text-decoration: none;\n  font-size: 20px;\n  font-weight: bold;\n  height: 32px;\n  line-height: 32px;\n`;\n\nconst headerContainer = css`\n  padding: 0px 20px;\n  border-bottom-width: 1px;\n  border-bottom-color: #cecece;\n  border-bottom-style: solid;\n`;\n\nconst headerWrapper = css`\n  ${wrapper}\n  display: grid;\n  grid-template-columns: 280px 1fr;\n  grid-gap: 16px;\n`;\n\nconst headerLogoWrapper = css`\n  justify-self: start;\n  align-self: center;\n`;\n\nconst navWrapper = css`\n  display: grid;\n  grid-template-columns: repeat(2, auto) 1fr;\n  grid-gap: 16px;\n`;\n\nconst Header = ({ siteTitle }: Props) => (\n  <header css={headerContainer}>\n    <div css={headerWrapper}>\n      <div css={headerLogoWrapper}>\n        <Link css={font} to=\"/\">\n          {siteTitle}\n        </Link>\n      </div>\n      <nav css={navWrapper}>\n        <Link css={font} to=\"/about\" activeStyle={{ color: 'hotpink' }}>\n          About\n        </Link>\n        <Link css={font} to=\"/blog\" activeStyle={{ color: 'hotpink' }}>\n          Blog\n        </Link>\n        <div />\n      </nav>\n    </div>\n  </header>\n);\n\nexport default Header;\n","import Header from \"./Header\"\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\n\nimport { Global, css } from '@emotion/core';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Header from '../Header';\n\nimport { wrapper } from '../../css';\n\nconst Layout: React.FC = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <>\n      <Global\n        styles={css`\n          body {\n            margin: 0px;\n          }\n        `}\n      />\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div css={wrapper}>{children}</div>\n    </>\n  );\n};\n\nexport default Layout;\n","import Layout from './Layout';\n\nexport default Layout;\n","import { useEffect, useState } from 'react';\n\nfunction useWindowWidth() {\n  const [windowWidth, setWindowWidth] = useState<number | undefined>(undefined);\n  useEffect(() => {\n    function handleResize() {\n      setWindowWidth(window.innerWidth);\n    }\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowWidth;\n}\n\nexport default useWindowWidth;\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","/** @jsx jsx */\nimport { jsx, css, keyframes } from '@emotion/core';\nimport { useCallback, useState, useEffect } from 'react';\n\nimport Arrow from '../../../contents/assets/arrow_right.svg';\n\nconst open = keyframes`\n  from {\n    transform: rotate(0deg)\n  }\n  to {\n    transform: rotate(90deg)\n  }\n`;\n\nconst close = keyframes`\n  from {\n    transform: rotate(90deg)\n  }\n  to% {\n    transform: rotate(0deg)\n  }\n`;\n\nconst categoryFont = css`\n  color: #6d6d6d;\n  flex: 1;\n  font-size: 24px;\n  font-weight: 700;\n  margin: 0px;\n`;\n\nconst titleFont = css`\n  color: #1a1a1a;\n  background-color: transparent;\n  font-size: 16px;\n`;\n\ninterface Props extends CategoryGroup {\n  categoryOfSelectedTitle: string;\n}\n\nconst Category = ({ category, categoryOfSelectedTitle, postTitles }: Props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  useEffect(() => {\n    setIsOpen(category === categoryOfSelectedTitle);\n  }, [category, categoryOfSelectedTitle]);\n\n  const handleClick = useCallback(() => setIsOpen(!isOpen), [isOpen]);\n\n  return (\n    <div onClick={handleClick}>\n      <div\n        css={css`\n          display: flex;\n          flex-direction: row;\n        `}\n      >\n        <h3 css={categoryFont}>{category}</h3>\n        <div\n          css={css`\n            animation: ${isOpen ? open : close} 1s ease;\n          `}\n        >\n          <Arrow />\n        </div>\n      </div>\n      {isOpen && (\n        <ul css={{ margin: 0, padding: 0 }}>\n          {postTitles.map(postTitle => {\n            const { path, title } = postTitle;\n            return (\n              <li\n                key={postTitle.id}\n                css={{\n                  listStyleType: 'none',\n                }}\n              >\n                <a href={`/blog${path}`} style={{ textDecoration: 'none' }}>\n                  <span css={titleFont}>{title}</span>\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Category;\n","import Category from './Category'\n\nexport default Category\n","import GroupByCategory from './GroupByCategory';\n\nexport default GroupByCategory;\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport { Fragment } from 'react';\n\nimport Category from '../Category';\n\ninterface Props {\n  categories: CategoryGroup[];\n  categoryOfSelectedTitle: string;\n}\n\nconst GroupByCategory = ({ categories, categoryOfSelectedTitle }: Props) => {\n  return (\n    <Fragment>\n      {categories.map((categoryGroup, index) => (\n        <Category\n          key={index.toString()}\n          {...categoryGroup}\n          categoryOfSelectedTitle={categoryOfSelectedTitle}\n        />\n      ))}\n    </Fragment>\n  );\n};\n\nexport default GroupByCategory;\n","import React, { createRef, useEffect } from 'react';\n\nconst Utterances = () => {\n  const ref = createRef<HTMLDivElement>();\n  const repo = process.env.GATSBY_COMMENT_REPO;\n\n  useEffect(() => {\n    if (ref) {\n      const utterances = document.createElement('script');\n      const attributes = {\n        src: 'https://utteranc.es/client.js',\n        repo: 'shhong7757/shhong7757.github.io',\n        label: 'comment',\n        'issue-term': 'pathname',\n        theme: 'github-light',\n        crossOrigin: 'anonymous',\n        async: 'true',\n      };\n\n      Object.entries(attributes).forEach(([key, value]) => {\n        utterances.setAttribute(key, value);\n      });\n\n      ref.current?.appendChild(utterances);\n    }\n  }, [repo]);\n\n  return <div ref={ref} />;\n};\n\nUtterances.displayName = 'Utterances';\n\nexport default Utterances;\n","import Utterances from './Utterances';\n\nexport default Utterances;\n","/** @jsx jsx */\nimport { graphql } from 'gatsby';\nimport { jsx, css } from '@emotion/core';\nimport { useMemo, useState, useEffect, useCallback } from 'react';\n\nimport useWindowWidth from '../hooks/useWindow';\n\nimport GroupByCategory from '../components/GroupByCategory';\nimport Layout from '../components/Layout';\nimport Utterances from '../components/Utterances';\n\nimport Menu from '../../contents/assets/menu.svg';\n\nimport 'prismjs/themes/prism-okaidia.css';\n\nconst articleWrapper = css`\n  margin-left: 48px;\n`;\n\nconst conttainer = css`\n  display: grid;\n  grid-template-columns: 280px 1fr;\n  @media (max-width: 1024px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst navWrapper = css`\n  background-color: #f7f7f7;\n  border-right-color: #cecece;\n  border-right-style: solid;\n  border-right-width: 1px;\n  @media (max-width: 1024px) {\n    border: none;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nconst subNavWrapper = css`\n  border-bottom-color: #cecece;\n  border-bottom-style: solid;\n  border-bottom-width: 1px;\n  padding: 8px 20px;\n  display: flex;\n  align-items: ceter;\n  line-height: 24px;\n`;\n\nconst PostTemplate = ({\n  data, // this prop will be injected by the GraphQL query below.\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [reactive, setReactive] = useState(false);\n\n  const {\n    allMarkdownRemark: { group },\n    markdownRemark: {\n      frontmatter: { title, category: categoryOfSelectedTitle, date },\n      html,\n    },\n  } = data; // data.markdownRemark holds our post data\n\n  const windowWidth = useWindowWidth();\n\n  const categoryGroups: CategoryGroup[] = useMemo(() => {\n    return group.map(g => {\n      const { category, edges } = g;\n      const postTitles = edges.map(edge => {\n        const {\n          node: {\n            id,\n            frontmatter: { title, path },\n          },\n        } = edge;\n        return { id, title, path };\n      });\n      return {\n        category,\n        postTitles,\n      };\n    });\n  }, [group]);\n\n  useEffect(() => {\n    if (windowWidth && windowWidth < 1024) setReactive(true);\n    else setReactive(false);\n  }, [windowWidth]);\n\n  const handleMenuClick = useCallback(() => setIsOpen(!isOpen), [isOpen]);\n\n  const navWrapperCombine = useMemo(\n    () =>\n      reactive && isOpen\n        ? css`\n            ${navWrapper} visibility:hidden;\n          `\n        : navWrapper,\n    [isOpen, reactive]\n  );\n\n  return (\n    <Layout>\n      {reactive && (\n        <div css={subNavWrapper}>\n          <span\n            css={css`\n              height: 24px;\n              width: 24px;\n            `}\n            onClick={handleMenuClick}\n          >\n            <Menu />\n          </span>\n          <span\n            css={css`\n              margin-left: 10px;\n            `}\n          >\n            {categoryOfSelectedTitle}\n          </span>\n        </div>\n      )}\n      <div css={conttainer}>\n        <nav css={navWrapperCombine}>\n          <GroupByCategory\n            categories={categoryGroups}\n            categoryOfSelectedTitle={categoryOfSelectedTitle}\n          />\n        </nav>\n        <article css={articleWrapper}>\n          <div className=\"blog-post-container\">\n            <div className=\"blog-post\">\n              <h1>{title}</h1>\n              <span>🗓{date}</span>\n              <div\n                className=\"blog-post-content\"\n                dangerouslySetInnerHTML={{ __html: html }}\n              />\n            </div>\n            <Utterances />\n          </div>\n        </article>\n      </div>\n    </Layout>\n  );\n};\n\nexport default PostTemplate;\n\nexport const pageQuery = graphql`\n  query($title: String!) {\n    allMarkdownRemark {\n      group(field: frontmatter___category) {\n        category: fieldValue\n        totalCount\n        edges {\n          node {\n            id\n            frontmatter {\n              path\n              title\n            }\n          }\n        }\n      }\n    }\n    markdownRemark(frontmatter: { path: { eq: $title } }) {\n      html\n      frontmatter {\n        category\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}