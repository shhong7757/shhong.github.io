{"version":3,"sources":["webpack:///./contents/assets/arrow_right.svg","webpack:///./contents/assets/menu.svg","webpack:///./src/css/index.ts","webpack:///./src/components/Header/Header.tsx","webpack:///./src/components/Header/index.ts","webpack:///./src/components/Layout/Layout.tsx","webpack:///./src/components/Layout/index.ts","webpack:///./src/hooks/useWindowDimensions.ts","webpack:///./src/hooks/useWindowPageYOffset.ts","webpack:///./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","webpack:///./src/components/Category/Category.tsx","webpack:///./src/components/Category/index.ts","webpack:///./src/components/GroupByCategory/index.ts","webpack:///./src/components/GroupByCategory/GroupByCategory.tsx","webpack:///./src/components/Utterances/Utterances.tsx","webpack:///./src/components/Utterances/index.ts","webpack:///./src/templates/BlogPost.tsx","webpack:///./contents/assets/arrow_up.svg"],"names":["React","ArrowRight","props","createElement","defaultProps","module","exports","default","Menu","wrapper","alignCenter","font","css","headerContainer","headerWrapper","headerLogoWrapper","navWrapper","Header","siteTitle","to","activeStyle","color","partiallyActive","Layout","children","data","styles","site","siteMetadata","title","useWindowDimensions","useState","width","undefined","height","dimensions","setDimensions","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowPageYOffset","pageYOffset","setPageYOffset","handleScroll","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value","open","keyframes","close","categoryFont","titleFont","Category","category","categoryOfSelectedTitle","postTitles","isOpen","setIsOpen","handleClick","useCallback","onClick","map","postTitle","path","key","id","href","style","textDecoration","GroupByCategory","categories","categoryGroup","index","toString","Utterances","ref","createRef","repo","process","GATSBY_COMMENT_REPO","utterances","document","entries","src","label","theme","crossOrigin","async","forEach","setAttribute","current","appendChild","displayName","articleWrapper","mainWrapper","mainContainer","navContainer","subNavWrapper","pageQuery","PostTemplate","isScrollButtonShow","setIsScrollButtonShow","reactive","setReactive","group","allMarkdownRemark","markdownRemark","frontmatter","date","html","windowInnerWidth","windowPageYOffset","categoryGroups","useMemo","g","edges","edge","node","showCategoriews","handleMenuClick","handleScrollButtonClick","scroll","top","behavior","navContainerCombine","className","dangerouslySetInnerHTML","__html","fill","ArrowUp"],"mappings":"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","file":"component---src-templates-blog-post-tsx-3aa48d1a9ec877311c3b.js","sourcesContent":["var React = require('react');\n\nfunction ArrowRight (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"d\":\"M0 0h24v24H0V0z\",\"fill\":\"none\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\",\"key\":1})]);\n}\n\nArrowRight.defaultProps = {\"height\":\"24\",\"viewBox\":\"0 0 24 24\",\"width\":\"24\"};\n\nmodule.exports = ArrowRight;\n\nArrowRight.default = ArrowRight;\n","var React = require('react');\n\nfunction Menu (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"d\":\"M0 0h24v24H0V0z\",\"fill\":\"none\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\",\"key\":1})]);\n}\n\nMenu.defaultProps = {\"height\":\"24\",\"viewBox\":\"0 0 24 24\",\"width\":\"24\"};\n\nmodule.exports = Menu;\n\nMenu.default = Menu;\n","import { css } from '@emotion/core';\n\nexport const wrapper = css`\n  max-width: 1200px;\n  margin: 0px auto;\n`;\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport { Link } from 'gatsby';\n\nimport { wrapper } from '../../css';\n\ninterface Props {\n  siteTitle: string;\n}\n\nconst alignCenter = css`\n  justify-self: center;\n  align-self: center;\n`;\n\nconst font = css`\n  ${alignCenter}\n  margin-top: 14px;\n  margin-bottom: 14px;\n  color: black;\n  text-decoration: none;\n  font-size: 20px;\n  font-weight: bold;\n  height: 32px;\n  line-height: 32px;\n`;\n\nconst headerContainer = css`\n  background-color: white;\n  border-bottom-color: #cecece;\n  border-bottom-style: solid;\n  border-bottom-width: 1px;\n  padding: 0px 20px;\n  position: sticky;\n  top: 0;\n`;\n\nconst headerWrapper = css`\n  ${wrapper}\n  display: grid;\n  grid-template-columns: 280px 1fr;\n  grid-gap: 16px;\n`;\n\nconst headerLogoWrapper = css`\n  justify-self: start;\n  align-self: center;\n`;\n\nconst navWrapper = css`\n  display: grid;\n  grid-template-columns: repeat(2, auto) 1fr;\n  grid-gap: 16px;\n`;\n\nconst Header = ({ siteTitle }: Props) => (\n  <header css={headerContainer}>\n    <div css={headerWrapper}>\n      <div css={headerLogoWrapper}>\n        <Link css={font} to=\"/\">\n          {siteTitle}\n        </Link>\n      </div>\n      <nav css={navWrapper}>\n        <Link\n          css={font}\n          to=\"/blog\"\n          activeStyle={{ color: 'hotpink' }}\n          partiallyActive={true}\n        >\n          Blog\n        </Link>\n        <div />\n      </nav>\n    </div>\n  </header>\n);\n\nexport default Header;\n","import Header from \"./Header\"\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\n\nimport { Global, css } from '@emotion/core';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Header from '../Header';\n\nconst Layout: React.FC = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <>\n      <Global\n        styles={css`\n          body {\n            margin: 0px;\n          }\n        `}\n      />\n      <Header siteTitle={data.site.siteMetadata.title} />\n      {children}\n    </>\n  );\n};\n\nexport default Layout;\n","import Layout from './Layout';\n\nexport default Layout;\n","import { useEffect, useState } from 'react';\n\nfunction useWindowDimensions() {\n  const [dimensions, setDimensions] = useState<{\n    width?: number;\n    height?: number;\n  }>({ width: undefined, height: undefined });\n\n  useEffect(() => {\n    function handleResize() {\n      const { innerWidth, innerHeight } = window;\n      setDimensions({\n        width: innerWidth,\n        height: innerHeight,\n      });\n    }\n    setDimensions({\n      width: innerWidth,\n      height: innerHeight,\n    });\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return dimensions;\n}\n\nexport default useWindowDimensions;\n","import { useEffect, useState } from 'react';\n\nfunction useWindowPageYOffset() {\n  const [pageYOffset, setPageYOffset] = useState(0);\n\n  useEffect(() => {\n    function handleScroll() {\n      setPageYOffset(window.pageYOffset);\n    }\n    setPageYOffset(window.pageYOffset);\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  return pageYOffset;\n}\n\nexport default useWindowPageYOffset;\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","/** @jsx jsx */\nimport { jsx, css, keyframes } from '@emotion/core';\nimport { useCallback, useState, useEffect, Fragment } from 'react';\n\nimport Arrow from '../../../contents/assets/arrow_right.svg';\n\nconst open = keyframes`\n  from {\n    transform: rotate(0deg)\n  }\n  to {\n    transform: rotate(90deg)\n  }\n`;\n\nconst close = keyframes`\n  from {\n    transform: rotate(90deg)\n  }\n  to% {\n    transform: rotate(0deg)\n  }\n`;\n\nconst categoryFont = css`\n  color: #6d6d6d;\n  flex: 1;\n  font-size: 24px;\n  font-weight: 700;\n  margin: 0px;\n`;\n\nconst titleFont = css`\n  color: #1a1a1a;\n  background-color: transparent;\n  font-size: 16px;\n`;\n\ninterface Props extends CategoryGroup {\n  categoryOfSelectedTitle: string;\n}\n\nconst Category = ({ category, categoryOfSelectedTitle, postTitles }: Props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  useEffect(() => {\n    setIsOpen(category === categoryOfSelectedTitle);\n  }, [category, categoryOfSelectedTitle]);\n\n  const handleClick = useCallback(() => setIsOpen(!isOpen), [isOpen]);\n\n  return (\n    <Fragment>\n      <div\n        css={css`\n          display: flex;\n          flex-direction: row;\n          margin-bottom: 8px;\n        `}\n        onClick={handleClick}\n      >\n        <h3 css={categoryFont}>{category}</h3>\n        <div\n          css={css`\n            animation: ${isOpen ? open : close} 0.5s forwards;\n          `}\n        >\n          <Arrow />\n        </div>\n      </div>\n      {isOpen && (\n        <ul css={{ margin: 0, padding: 0 }}>\n          {postTitles.map(postTitle => {\n            const { path, title } = postTitle;\n            return (\n              <li\n                key={postTitle.id}\n                css={css`\n                  list-style-type: 'none';\n                  padding: 4px 0px;\n                `}\n              >\n                <a href={`/blog${path}`} style={{ textDecoration: 'none' }}>\n                  <span css={titleFont}>{title}</span>\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Category;\n","import Category from './Category'\n\nexport default Category\n","import GroupByCategory from './GroupByCategory';\n\nexport default GroupByCategory;\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\n\nimport Category from '../Category';\n\ninterface Props {\n  categories: CategoryGroup[];\n  categoryOfSelectedTitle: string;\n}\n\nconst GroupByCategory = ({ categories, categoryOfSelectedTitle }: Props) => {\n  return (\n    <div\n      css={css`\n        padding: 20px 0px;\n      `}\n    >\n      {categories.map((categoryGroup, index) => (\n        <Category\n          key={index.toString()}\n          {...categoryGroup}\n          categoryOfSelectedTitle={categoryOfSelectedTitle}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default GroupByCategory;\n","import React, { createRef, useEffect } from 'react';\n\nconst Utterances = () => {\n  const ref = createRef<HTMLDivElement>();\n  const repo = process.env.GATSBY_COMMENT_REPO;\n\n  useEffect(() => {\n    if (ref) {\n      const utterances = document.createElement('script');\n      const attributes = {\n        src: 'https://utteranc.es/client.js',\n        repo: 'shhong7757/shhong7757.github.io',\n        label: 'comment',\n        'issue-term': 'pathname',\n        theme: 'github-light',\n        crossOrigin: 'anonymous',\n        async: 'true',\n      };\n\n      Object.entries(attributes).forEach(([key, value]) => {\n        utterances.setAttribute(key, value);\n      });\n\n      ref.current?.appendChild(utterances);\n    }\n  }, [repo]);\n\n  return <div ref={ref} />;\n};\n\nUtterances.displayName = 'Utterances';\n\nexport default Utterances;\n","import Utterances from './Utterances';\n\nexport default Utterances;\n","/** @jsx jsx */\nimport { graphql } from 'gatsby';\nimport { jsx, css, keyframes } from '@emotion/core';\nimport { useMemo, useState, useEffect, useCallback } from 'react';\n\nimport useWindowDimensions from '../hooks/useWindowDimensions';\nimport useWindowPageYOffset from '../hooks/useWindowPageYOffset';\n\nimport GroupByCategory from '../components/GroupByCategory';\nimport Layout from '../components/Layout';\nimport Utterances from '../components/Utterances';\n\nimport ArrowUp from '../../contents/assets/arrow_up.svg';\nimport Menu from '../../contents/assets/menu.svg';\n\nimport 'prismjs/themes/prism-okaidia.css';\n\nconst articleWrapper = css`\n  margin-left: 48px;\n  @media (max-width: 1024px) {\n    margin-left: 0;\n  }\n`;\n\nconst mainWrapper = css`\n  display: grid;\n  grid-template-columns: 280px 1fr;\n  margin: 0px auto;\n  max-width: 1200px;\n  @media (max-width: 1024px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst mainContainer = css`\n  padding: 0px 20px;\n`;\n\nconst navContainer = css`\n  @media (min-width: 1024px) {\n    height: calc(100vh - 61px);\n    overflow-y: scroll;\n    padding-right: 20px;\n    position: sticky;\n    top: 61px;\n  }\n  @media (max-width: 1023px) {\n    background-color: #f7f7f7;\n    padding: 0px 20px;\n    z-index: 100;\n  }\n`;\n\nconst navWrapper = css`\n  height: 100%;\n  overflow: auto;\n`;\n\nconst subNavWrapper = css`\n  align-items: ceter;\n  background-color: white;\n  border-bottom-color: #cecece;\n  border-bottom-style: solid;\n  border-bottom-width: 1px;\n  display: flex;\n  line-height: 24px;\n  padding: 8px 20px;\n  position: sticky;\n  top: 61px;\n`;\n\nconst titleFont = css`\n  font-weight: 700;\n  font-size: 60px;\n  line-height: 65px;\n  margin: 20px 0px 4px 0px;\n`;\n\nconst PostTemplate = ({\n  data, // this prop will be injected by the GraphQL query below.\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [isScrollButtonShow, setIsScrollButtonShow] = useState(false);\n  const [reactive, setReactive] = useState(false);\n\n  const {\n    allMarkdownRemark: { group },\n    markdownRemark: {\n      frontmatter: { title, category: categoryOfSelectedTitle, date },\n      html,\n    },\n  } = data; // data.markdownRemark holds our post data\n\n  const {\n    height: windowInnerHeight,\n    width: windowInnerWidth,\n  } = useWindowDimensions();\n\n  const windowPageYOffset = useWindowPageYOffset();\n\n  const categoryGroups: CategoryGroup[] = useMemo(() => {\n    return group.map(g => {\n      const { category, edges } = g;\n      const postTitles = edges.map(edge => {\n        const {\n          node: {\n            id,\n            frontmatter: { title, path },\n          },\n        } = edge;\n        return { id, title, path };\n      });\n      return {\n        category,\n        postTitles,\n      };\n    });\n  }, [group]);\n\n  const showCategoriews = useMemo(() => !(!isOpen && reactive), [\n    isOpen,\n    reactive,\n  ]);\n\n  useEffect(() => {\n    if (windowInnerWidth && windowInnerWidth < 1024) setReactive(true);\n    else setReactive(false);\n  }, [windowInnerWidth]);\n\n  useEffect(() => {\n    setIsScrollButtonShow(windowPageYOffset > 0);\n  }, [windowPageYOffset]);\n\n  useEffect(() => setIsOpen(false), [reactive]);\n\n  const handleMenuClick = useCallback(() => setIsOpen(!isOpen), [isOpen]);\n\n  const handleScrollButtonClick = useCallback(() => {\n    window.scroll({ top: 0, behavior: 'smooth' });\n  }, []);\n\n  const navContainerCombine = useMemo(\n    () =>\n      isOpen\n        ? css`\n            ${navContainer}\n            box-sizing: border-box;\n            height: 100%;\n            left: 0px;\n            overflow-y: auto;\n            overscroll-behavior: contain;\n            position: fixed;\n            width: 100%;\n          `\n        : navContainer,\n    [isOpen, reactive]\n  );\n\n  return (\n    <Layout>\n      {reactive && (\n        <div css={subNavWrapper}>\n          <span\n            css={css`\n              height: 24px;\n              width: 24px;\n            `}\n            onClick={handleMenuClick}\n          >\n            <Menu />\n          </span>\n          <span\n            css={css`\n              margin-left: 10px;\n            `}\n          >\n            {categoryOfSelectedTitle}\n          </span>\n        </div>\n      )}\n      <main css={mainContainer}>\n        <div css={mainWrapper}>\n          <div css={navContainerCombine}>\n            <nav css={navWrapper}>\n              {showCategoriews && (\n                <GroupByCategory\n                  categories={categoryGroups}\n                  categoryOfSelectedTitle={categoryOfSelectedTitle}\n                />\n              )}\n            </nav>\n          </div>\n          <article css={articleWrapper}>\n            <div className=\"blog-post-container\">\n              <div className=\"blog-post\">\n                <div\n                  css={css`\n                    padding-bottom: 10px;\n                  `}\n                >\n                  <h1 css={titleFont}>{title}</h1>\n                  <span>🗓{date}</span>\n                </div>\n                <div\n                  className=\"blog-post-content\"\n                  dangerouslySetInnerHTML={{ __html: html }}\n                />\n              </div>\n              <Utterances />\n            </div>\n          </article>\n        </div>\n      </main>\n      <div\n        css={\n          isScrollButtonShow\n            ? css`\n                position: fixed;\n                width: 56px;\n                height: 56px;\n                border-radius: 50%;\n                bottom: 20px;\n                right: 20px;\n                background-color: black;\n                transition: bottom 0.2s, opacity 0.2s;\n              `\n            : css`\n                bottom: -56px;\n                transition: bottom 0.2s, opacity 0.2s;\n              `\n        }\n        onClick={handleScrollButtonClick}\n      >\n        <div\n          css={css`\n            padding: 16px;\n          `}\n        >\n          <ArrowUp fill=\"white\" width={24} height={24} />\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default PostTemplate;\n\nexport const pageQuery = graphql`\n  query($title: String!) {\n    allMarkdownRemark {\n      group(field: frontmatter___category) {\n        category: fieldValue\n        totalCount\n        edges {\n          node {\n            id\n            frontmatter {\n              path\n              title\n            }\n          }\n        }\n      }\n    }\n    markdownRemark(frontmatter: { path: { eq: $title } }) {\n      html\n      frontmatter {\n        category\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n      }\n    }\n  }\n`;\n","var React = require('react');\n\nfunction ArrowUp (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"d\":\"M0 0h24v24H0z\",\"fill\":\"none\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z\",\"key\":1})]);\n}\n\nArrowUp.defaultProps = {\"height\":\"24\",\"viewBox\":\"0 0 24 24\",\"width\":\"24\"};\n\nmodule.exports = ArrowUp;\n\nArrowUp.default = ArrowUp;\n"],"sourceRoot":""}