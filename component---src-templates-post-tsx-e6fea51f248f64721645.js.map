{"version":3,"sources":["webpack:///./src/components/common/Utterances/Utterances.tsx","webpack:///./src/components/common/Utterances/index.ts","webpack:///./src/templates/post.tsx","webpack:///./src/components/common/Tag/index.ts","webpack:///./src/components/common/Tag/Tag.tsx","webpack:///./src/components/common/TagList/TagList.tsx","webpack:///./src/components/common/TagList/index.ts","webpack:///./src/components/common/Header/index.ts","webpack:///./src/components/common/Header/Header.tsx","webpack:///./src/components/common/Layout/Layout.tsx","webpack:///./src/components/common/Layout/index.ts"],"names":["Utterances","ref","createRef","repo","process","useEffect","utterances","document","createElement","attributes","src","theme","crossOrigin","async","Object","entries","forEach","key","value","setAttribute","current","appendChild","displayName","pageQuery","PostTemplate","data","markdownRemark","frontmatter","title","date","tags","html","Layout","className","TagList","dangerouslySetInnerHTML","__html","Tag","tag","vertical","map","index","toString","css","marginRight","display","Header","siteTitle","style","marginBottom","margin","maxWidth","padding","to","color","textDecoration","activeStyle","children","site","siteMetadata","paddingTop"],"mappings":"8MAEMA,EAAa,WACjB,IAAMC,EAAMC,sBACNC,EAAOC,8BAsBb,OApBAC,qBAAU,WACR,GAAIJ,EAAK,CACP,IAAMK,EAAaC,SAASC,cAAc,UACpCC,EAAa,CACjBC,IAAK,gCACLP,OACA,aAAc,MACdQ,MAAO,eACPC,YAAa,YACbC,MAAO,QAGTC,OAAOC,QAAQN,GAAYO,SAAQ,YAAkB,uBAAhBC,EAAgB,KAAXC,EAAW,KACnDZ,EAAWa,aAAaF,EAAKC,MAG/BjB,EAAImB,QAAQC,YAAYf,MAEzB,CAACH,IAEG,mBAAKF,IAAKA,KAGnBD,EAAWsB,YAAc,aAEVtB,IC7BAA,ED6BAA,EEOFuB,GAFEC,UA5BM,SAAC,GAEhB,QADJC,KAGEC,eAFE,IAGAC,YAAeC,EAHf,EAGeA,MAAOC,EAHtB,EAGsBA,KAAMC,EAH5B,EAG4BA,KAC5BC,EAJA,EAIAA,KAIJ,OACE,YAACC,EAAA,EAAD,KACE,mBAAKC,UAAU,uBACb,mBAAKA,UAAU,aACb,sBAAKL,GACL,6BAASC,GACT,YAACK,EAAA,EAAD,CAASJ,KAAMA,IACf,mBACEG,UAAU,oBACVE,wBAAyB,CAAEC,OAAQL,MAGvC,YAAC,EAAD,SAQiB,e,gECpCVM,ECKH,SAAC,GAAmB,IAAjBC,EAAiB,EAAjBA,IACb,OAAO,8BAAUA,ICoBJJ,EAlBC,SAAC,GAAsC,IAApCJ,EAAoC,EAApCA,KAAoC,IAA9BS,gBAA8B,SACrD,OACE,uBACGT,EAAKU,KAAI,SAACF,EAAKG,GAAN,OACR,oBACExB,IAAKwB,EAAMC,WACXC,IAAG,YAAE,CACHC,YAAa,GACbC,QAASN,EAAW,QAAU,eAGhC,YAAC,EAAD,CAAKD,IAAKA,UCnBLJ,O,yKCAAY,ECMA,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,sBACEC,MAAO,CACLC,aAAc,YAGhB,mBACED,MAAO,CACLE,OAAQ,SACRC,SAAU,IACVC,QAAS,sBAGX,mBAAKT,IAAG,GACN,kBAAIK,MAAO,CAAEE,OAAQ,IACnB,YAAC,OAAD,CACEG,GAAG,IACHL,MAAO,CACLM,MAAO,QACPC,eAAgB,SAGjBR,KAIP,uBACE,YAAC,OAAD,CACEM,GAAG,SACHG,YAAa,CAAEF,MAAO,WACtBN,MAAO,CACLM,MAAO,QACPC,eAAgB,OAChBX,YAAa,KANjB,YAWA,YAAC,OAAD,CACES,GAAG,QACHG,YAAa,CAAEF,MAAO,WACtBN,MAAO,CACLM,MAAO,QACPC,eAAgB,SALpB,eCLOvB,EA7BU,SAAC,GAAiB,IAAfyB,EAAe,EAAfA,SACpBhC,EAAO,OAUb,OACE,8BACE,YAAC,EAAD,CAAQsB,UAAWtB,EAAKiC,KAAKC,aAAa/B,QAC1C,mBACEoB,MAAO,CACLE,OAAQ,SACRC,SAAU,IACVC,QAAS,wBACTQ,WAAY,IAGd,wBAAOH,GACP,8BCjCOzB,O","file":"component---src-templates-post-tsx-e6fea51f248f64721645.js","sourcesContent":["import React, { createRef, useEffect } from 'react';\n\nconst Utterances = () => {\n  const ref = createRef<HTMLDivElement>();\n  const repo = process.env.GATSBY_COMMENT_REPO;\n\n  useEffect(() => {\n    if (ref) {\n      const utterances = document.createElement('script');\n      const attributes = {\n        src: 'https://utteranc.es/client.js',\n        repo,\n        'issue-term': 'url',\n        theme: 'github-light',\n        crossOrigin: 'anonymous',\n        async: 'true',\n      };\n\n      Object.entries(attributes).forEach(([key, value]) => {\n        utterances.setAttribute(key, value);\n      });\n\n      ref.current.appendChild(utterances);\n    }\n  }, [repo]);\n\n  return <div ref={ref} />;\n};\n\nUtterances.displayName = 'Utterances';\n\nexport default Utterances;\n","import Utterances from './Utterances';\n\nexport default Utterances;\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport { graphql } from 'gatsby';\n\nimport Layout from '../components/common/Layout';\nimport TagList from '../components/common/TagList';\nimport Utterances from '../components/common/Utterances';\n\nconst PostTemplate = ({\n  data, // this prop will be injected by the GraphQL query below.\n}) => {\n  const {\n    markdownRemark: {\n      frontmatter: { title, date, tags },\n      html,\n    },\n  } = data; // data.markdownRemark holds our post data\n\n  return (\n    <Layout>\n      <div className=\"blog-post-container\">\n        <div className=\"blog-post\">\n          <h1>{title}</h1>\n          <span>ðŸ—“{date}</span>\n          <TagList tags={tags} />\n          <div\n            className=\"blog-post-content\"\n            dangerouslySetInnerHTML={{ __html: html }}\n          />\n        </div>\n        <Utterances />\n      </div>\n    </Layout>\n  );\n};\n\nexport default PostTemplate;\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        tags\n        title\n      }\n    }\n  }\n`;\n","import Tag from './Tag'\n\nexport default Tag\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core';\n\ninterface Props {\n  tag: string;\n}\n\nconst Tag = ({ tag }: Props) => {\n  return <span>ðŸ”– {tag}</span>;\n};\n\nexport default Tag;\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core';\n\nimport Tag from '../../common/Tag';\n\ninterface Props {\n  tags: string[];\n  vertical?: boolean;\n}\n\nconst TagList = ({ tags, vertical = false }: Props) => {\n  return (\n    <div>\n      {tags.map((tag, index) => (\n        <span\n          key={index.toString()}\n          css={{\n            marginRight: 10,\n            display: vertical ? 'block' : 'inline-bl',\n          }}\n        >\n          <Tag tag={tag} />\n        </span>\n      ))}\n    </div>\n  );\n};\n\nexport default TagList;\n","import TagList from './TagList'\n\nexport default TagList\n","import Header from \"./Header\"\n\nexport default Header\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport { Link } from 'gatsby';\n\ninterface Props {\n  siteTitle: string;\n}\n\nconst Header = ({ siteTitle }: Props) => (\n  <header\n    style={{\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <div css={{ display: 'grid', gridTemplateColumns: '1fr auto' }}>\n        <h1 style={{ margin: 0 }}>\n          <Link\n            to=\"/\"\n            style={{\n              color: `black`,\n              textDecoration: `none`,\n            }}\n          >\n            {siteTitle}\n          </Link>\n        </h1>\n      </div>\n      <nav>\n        <Link\n          to=\"/about\"\n          activeStyle={{ color: 'hotpink' }}\n          style={{\n            color: `black`,\n            textDecoration: `none`,\n            marginRight: 10,\n          }}\n        >\n          About ðŸ‘€\n        </Link>\n        <Link\n          to=\"/blog\"\n          activeStyle={{ color: 'hotpink' }}\n          style={{\n            color: `black`,\n            textDecoration: `none`,\n          }}\n        >\n          Blog ðŸ“š\n        </Link>\n      </nav>\n    </div>\n  </header>\n);\n\nexport default Header;\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Header from '../Header';\n\nconst Layout: React.FC = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n        <footer></footer>\n      </div>\n    </>\n  );\n};\n\nexport default Layout;\n","import Layout from './Layout';\n\nexport default Layout;\n"],"sourceRoot":""}